name: Build wheels
on: workflow_dispatch

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-11, macos-12, windows-2019, ubuntu-20.04]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions/setup-python@v2

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Install cibuildwheel
        run: python -X utf8 -m pip install cibuildwheel==2.3.1

      - name: Set up MinGW
        if: runner.os == 'Windows'
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64

      - name: Build wheels
        run: python -X utf8 -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS: all
          CIBW_ARCHS_MACOS: "x86_64"
          CIBW_BUILD_FRONTEND: "build"
          CIBW_BUILD: cp38-* cp39-* cp310-*
          CIBW_SKIP: '*i686 cp39-win_arm64'
          MACOSX_DEPLOYMENT_TARGET: "11.0"

      - name: Upload built wheels
        uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Build SDist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  # upload_pypi:
  #   name: Upload package to PyPI
  #   needs: [build_wheels, build_sdist]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: artifact
  #         path: dist

  #     - uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         user: __token__
  #         password: ${{ secrets.PYPI_TOKEN }}
